{
  "@context": {
    "shacl": "http://www.w3.org/ns/shacl#",
    "fnml": "http://semweb.mmlab.be/ns/fnml#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "label": "rdfs:label",
    "rdfs:subClassOf": { "@type": "@id" },
    "rdfs:range": { "@type": "@id" },
    "rdfs:domain": { "@type": "@id" },
    "boolean": "http://www.w3.org/2001/XMLSchema#boolean",
    "integer": "http://www.w3.org/2001/XMLSchema#integer",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "rr": "http://www.w3.org/ns/r2rml#",
    "rml": "http://semweb.mmlab.be/ns/rml#",
    "owl": "http://www.w3.org/2002/07/owl#",
    "skos": "http://www.w3.org/2004/02/skos/core#",
    "dcterms": "http://purl.org/dc/elements/1.1/",
    "description": "dcterms:description",
    "shacl:class": { "@type": "@id" },
    "shacl:datatype": { "@type": "@id" },
    "shacl:maxCount": { "@type": "xsd:integer" },
    "shacl:minCount": { "@type": "xsd:integer" },
    "shacl:targetClass": { "@type": "@id" },
    "shacl:path": { "@type": "@id" },
    "skl": "https://standardknowledge.com/ontologies/core/",
    "skl:integration": { "@type": "@id" },
    "skl:account": { "@type": "@id" },
    "skl:openApiDescription": { "@type": "@json" },
    "skl:parametersContext": { "@type": "@json" },
    "skl:returnValueFrame": { "@type": "@json" },
    "skl:noun": { "@type": "@id" },
    "skl:verb": { "@type": "@id" },
    "skl:parameterMapping": { "@type": "@id" },
    "skl:parameterMappingFrame": { "@type": "@json" },
    "skl:returnValueMapping": { "@type": "@id" },
    "skl:operationMapping": { "@type": "@id" },
    "skl:verbMapping": { "@type": "@id" },
    "integration": { "@id": "skl:integration", "@type": "@id" },
    "verb": { "@id": "skl:verb", "@type": "@id" },
    "rml:referenceFormulation": { "@type": "@id" },
    "rr:parentTriplesMap": { "@type": "@id" },
    "rr:predicate": { "@type": "@id" },
    "rr:object": { "@type": "@id" },
    "rr:termType": { "@type": "@id" },
    "rr:subject": { "@type": "@id" },
    "example": "https://example.com/"
  },
  "@graph": [
    {
      "@id": "schema:Event",
      "@type": ["owl:Class", "shacl:NodeShape"],
      "rdfs:subClassOf": "https://standardknowledge.com/ontologies/core/Noun"
    },
    {
      "@id": "https://example.com/data/StubhubAccount1",
      "@type": "https://standardknowledge.com/ontologies/core/Account",
      "skl:integration": "https://example.com/integrations/Stubhub"
    },
    {
      "@id": "https://example.com/integrations/Stubhub",
      "@type": "https://standardknowledge.com/ontologies/core/Integration",
      "description": "StubHub is the world's top destination for ticket buyers and resellers.",
      "label": "Stubhub"
    },
    {
      "@id": "https://example.com/data/StubhubAccount1SecurityCredentials",
      "@type": "https://standardknowledge.com/ontologies/core/SecurityCredentials",
      "https://standardknowledge.com/ontologies/core/clientId": "adlerfaulkner",
      "https://standardknowledge.com/ontologies/core/clientSecret": "abc123",
      "https://standardknowledge.com/ontologies/core/account": "https://example.com/data/StubhubAccount1"
    },
    {
      "@id": "https://example.com/getOauthTokens",
      "@type": "https://standardknowledge.com/ontologies/core/OpenApiSecuritySchemeVerb",
      "label": "getOauthTokens",
      "skl:parametersContext": {
        "account": {
          "@id": "https://standardknowledge.com/ontologies/core/account",
          "@type": "@id"
        }
      },
      "skl:parameters": {
        "@type": "shacl:NodeShape",
        "shacl:targetClass": "https://standardknowledge.com/ontologies/core/Parameters",
        "shacl:property": [
          {
            "shacl:maxCount": 1,
            "shacl:minCount": 1,
            "shacl:name": "account",
            "shacl:path": "https://standardknowledge.com/ontologies/core/account"
          }
        ]
      },
      "skl:returnValue": {
        "@type": "shacl:NodeShape",
        "shacl:closed": false,
        "shacl:property": [
          {
            "shacl:maxCount": 1,
            "shacl:minCount": 1,
            "shacl:name": "accessToken",
            "shacl:path": "https://standardknowledge.com/ontologies/core/accessToken"
          }
        ]
      },
      "skl:returnValueFrame": {
        "@id": "https://example.com/getOauthTokensReturnValueSubject"
      }
    },
    {
      "@id": "https://example.com/data/45",
      "@type": "https://standardknowledge.com/ontologies/core/VerbIntegrationMapping",
      "integration": "https://example.com/integrations/Stubhub",
      "verb": "https://example.com/getOauthTokens",
      "label": "getOauthTokensToStubhub",
      "skl:parameterMapping": {
        "@type": "rr:TriplesMap",
        "rml:logicalSource": {
          "@type": "rml:LogicalSource",
          "rml:iterator": "$",
          "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
          "rml:source": "input.json"
        },
        "rr:predicateObjectMap": [
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rr:constant": "read:events"
            },
            "rr:predicate": "example:scope"
          },
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rr:constant": "client_credentials"
            },
            "rr:predicate": "example:grant_type"
          }
        ],
        "rr:subjectMap": {
          "@type": "rr:SubjectMap",
          "rr:termType": "rr:BlankNode"
        }
      },
      "skl:parameterMappingFrame": {
        "@context": {
          "scope": "https://example.com/scope",
          "grant_type": "https://example.com/grant_type"
        }
      },
      "skl:operationMapping": {
        "@type": "rr:TriplesMap",
        "rml:logicalSource": {
          "@type": "rml:LogicalSource",
          "rml:iterator": "$",
          "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
          "rml:source": "input.json"
        },
        "rr:predicateObjectMap": [
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rr:constant": "OAuth2"
            },
            "rr:predicate": "skl:schemeName"
          },
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rr:constant": "clientCredentials"
            },
            "rr:predicate": "skl:oauthFlow"
          },
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rr:constant": "tokenUrl"
            },
            "rr:predicate": "skl:stage"
          }
        ],
        "rr:subjectMap": {
          "@type": "rr:SubjectMap",
          "rr:termType": "rr:BlankNode"
        }
      },
      "skl:returnValueMapping": {
        "@type": "rr:TriplesMap",
        "rml:logicalSource": {
          "@type": "rml:LogicalSource",
          "rml:iterator": "$.data",
          "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
          "rml:source": "input.json"
        },
        "rr:predicateObjectMap": [
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rml:reference": "access_token"
            },
            "rr:predicate": "skl:accessToken"
          }
        ],
        "rr:subject": "https://example.com/getOauthTokensReturnValueSubject"
      }
    },
    {
      "@id": "https://example.com/getEvents",
      "@type": "https://standardknowledge.com/ontologies/core/Verb",
      "label": "getEvents",
      "https://standardknowledge.com/ontologies/core/parametersContext": {
        "city": {
          "@id": "https://example.comcity",
          "@type": "http://www.w3.org/2001/XMLSchema#string"
        },
        "startAfterdate": {
          "@id": "https://example.comdate",
          "@type": "http://www.w3.org/2001/XMLSchema#string"
        },
        "startBeforedate": {
          "@id": "https://example.comdate",
          "@type": "http://www.w3.org/2001/XMLSchema#string"
        },
        "page": {
          "@id": "https://example.compage",
          "@type": "http://www.w3.org/2001/XMLSchema#integer"
        },
        "pageSize": {
          "@id": "https://example.compageSize",
          "@type": "http://www.w3.org/2001/XMLSchema#integer"
        },
        "account": {
          "@id": "https://standardknowledge.com/ontologies/core/account",
          "@type": "@id"
        }
      },
      "https://standardknowledge.com/ontologies/core/parameters": {
        "@type": "shacl:NodeShape",
        "shacl:targetClass": "https://standardknowledge.com/ontologies/core/Parameters",
        "shacl:property": [
          {
            "shacl:datatype": "xsd:string",
            "shacl:maxCount": 1,
            "shacl:name": "city",
            "shacl:path": "https://example.comcity"
          },
          {
            "shacl:datatype": "xsd:string",
            "shacl:maxCount": 1,
            "shacl:name": "startAfterDate",
            "shacl:path": "https://example.comstartAfterDate"
          },
          {
            "shacl:datatype": "xsd:string",
            "shacl:maxCount": 1,
            "shacl:name": "startBeforeDate",
            "shacl:path": "https://example.comstartBeforeDate"
          },
          {
            "shacl:datatype": "xsd:integer",
            "shacl:maxCount": 1,
            "shacl:name": "page",
            "shacl:path": "https://example.compage"
          },
          {
            "shacl:datatype": "xsd:integer",
            "shacl:maxCount": 1,
            "shacl:name": "pageSize",
            "shacl:path": "https://example.compageSize"
          },
          {
            "shacl:maxCount": 1,
            "shacl:minCount": 1,
            "shacl:name": "account",
            "shacl:path": "https://standardknowledge.com/ontologies/core/account"
          }
        ]
      },
      "https://standardknowledge.com/ontologies/core/returnValue": {
        "@id": "https://standardknowledge.com/ontologies/core/TokenPaginatedCollection"
      },
      "https://standardknowledge.com/ontologies/core/returnValueFrame": {
        "@type": "https://standardknowledge.com/ontologies/core/TokenPaginatedCollection"
      }
    },
    {
      "@id": "https://example.com/data/7",
      "@type": "https://standardknowledge.com/ontologies/core/VerbIntegrationMapping",
      "integration": "https://example.com/integrations/Stubhub",
      "verb": "https://example.com/getEvents",
      "name": "getEventsToStubhub",
      "skl:operationMapping": {
        "@type": "rr:TriplesMap",
        "rml:logicalSource": {
          "@type": "rml:LogicalSource",
          "rml:iterator": "$",
          "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
          "rml:source": "input.json"
        },
        "rr:predicateObjectMap": [
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rr:constant": "Events_SearchEvents"
            },
            "rr:predicate": "skl:operationId"
          }
        ],
        "rr:subjectMap": {
          "@type": "rr:SubjectMap",
          "rr:termType": "rr:BlankNode"
        }
      },
      "skl:parameterMapping": {
        "@type": "rr:TriplesMap",
        "rml:logicalSource": {
          "@type": "rml:LogicalSource",
          "rml:iterator": "$",
          "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
          "rml:source": "input.json"
        },
        "rr:predicateObjectMap": [
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rml:reference": "page",
              "rr:datatype": "http://www.w3.org/2001/XMLSchema#string"
            },
            "rr:predicate": "event:page"
          },
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rml:reference": "pageSize",
              "rr:datatype": "http://www.w3.org/2001/XMLSchema#string"
            },
            "rr:predicate": "event:page_size"
          },
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rml:reference": "city"           
            },
            "rr:predicate": "event:q"
          },
          {
            "@type": "rr:PredicateObjectMap",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rr:constant": "start_date"           
            },
            "rr:predicate": "event:sort"
          }
        ],
        "rr:subjectMap": {
          "@type": "rr:SubjectMap",
          "rr:termType": "rr:BlankNode"
        }
      },
      "skl:parameterMappingFrame": {
        "@context": {
          "page": "https://example.com/page", 
          "page_size": "https://example.com/page_size", 
          "q": "https://example.com/q", 
          "sort": "https://example.com/sort"
        }
      },
      "skl:returnValueMapping": [
        {
          "@type": "rr:TriplesMap",
          "rml:logicalSource": {
            "@type": "rml:LogicalSource",
            "rml:iterator": "$.data",
            "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
            "rml:source": "input.json"
          },
          "rr:predicateObjectMap": [
            {
              "@type": "rr:PredicateObjectMap",
              "rr:objectMap": {
                "@type": "rr:ObjectMap",
                "rr:parentTriplesMap": {
                  "@type": "rr:TriplesMap",
                  "rml:logicalSource": {
                    "@type": "rml:LogicalSource",
                    "rml:iterator": "$.['_embedded'].items[*]",
                    "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
                    "rml:source": "input.json"
                  },
                  "rr:predicateObjectMap": [
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "id"
                      },
                      "rr:predicate": "skl:sourceId"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rr:termType": "rr:IRI",
                        "rr:constant": "https://example.com/integrations/Stubhub"
                      },
                      "rr:predicate": "skl:integration"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "id"
                      },
                      "rr:predicate": "schema:identifier"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "name"
                      },
                      "rr:predicate": "schema:name"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "['_links']['event:webpage'].href"
                      },
                      "rr:predicate": "schema:url"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "start_date"
                      },
                      "rr:predicate": "schema:startDate"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "end_date"
                      },
                      "rr:predicate": "schema:endDate"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rr:template": "https://example.com/data/stubhub/venues/{['_embedded'].venue.id}"
                      },
                      "rr:predicate": "schema:location"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "fnml:functionValue": {
                          "@type": "fnml:FunctionValue",
                          "rr:predicateObjectMap": [
                            {
                              "@type": "rr:PredicateObjectMap",
                              "rr:object": "http://users.ugent.be/~bjdmeest/function/grel.ttl#controls_if",
                              "rr:predicate": "https://w3id.org/function/ontology#executes"
                            },
                            {
                              "@type": "rr:PredicateObjectMap",
                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#bool_b",
                              "rr:objectMap": {
                                "@type": "rr:ObjectMap",
                                "fnml:functionValue": {
                                  "@type": "fnml:FunctionValue",
                                  "rr:predicateObjectMap": [
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:object": "http://example.com/idlab/function/equal",
                                      "rr:predicate": "https://w3id.org/function/ontology#executes"
                                    },
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:objectMap": {
                                        "@type": "rr:ObjectMap",
                                        "rml:reference": "status"
                                      },
                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter"
                                    },
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:objectMap": {
                                        "@type": "rr:ObjectMap",
                                        "rr:constant": "Canceled"
                                      },
                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter2"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "@type": "rr:PredicateObjectMap",
                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#any_true",
                              "rr:objectMap": {
                                "@type": "rr:ObjectMap",
                                "rr:constant": "EventCancelled"
                              }
                            },
                            {
                              "@type": "rr:PredicateObjectMap",
                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#any_false",
                              "rr:objectMap": {
                                "@type": "rr:ObjectMap",
                                "fnml:functionValue": {
                                  "@type": "fnml:FunctionValue",
                                  "rr:predicateObjectMap": [
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:object": "http://users.ugent.be/~bjdmeest/function/grel.ttl#controls_if",
                                      "rr:predicate": "https://w3id.org/function/ontology#executes"
                                    },
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#bool_b",
                                      "rr:objectMap": {
                                        "@type": "rr:ObjectMap",
                                        "fnml:functionValue": {
                                          "@type": "fnml:FunctionValue",
                                          "rr:predicateObjectMap": [
                                            {
                                              "@type": "rr:PredicateObjectMap",
                                              "rr:object": "http://example.com/idlab/function/equal",
                                              "rr:predicate": "https://w3id.org/function/ontology#executes"
                                            },
                                            {
                                              "@type": "rr:PredicateObjectMap",
                                              "rr:objectMap": {
                                                "@type": "rr:ObjectMap",
                                                "rml:reference": "status"
                                              },
                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter"
                                            },
                                            {
                                              "@type": "rr:PredicateObjectMap",
                                              "rr:objectMap": {
                                                "@type": "rr:ObjectMap",
                                                "rr:constant": "Postponed"
                                              },
                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter2"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#any_true",
                                      "rr:objectMap": {
                                        "@type": "rr:ObjectMap",
                                        "rr:constant": "EventPostponed"
                                      }
                                    },
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#any_false",
                                      "rr:objectMap": {
                                        "@type": "rr:ObjectMap",
                                        "fnml:functionValue": {
                                          "@type": "fnml:FunctionValue",
                                          "rr:predicateObjectMap": [
                                            {
                                              "@type": "rr:PredicateObjectMap",
                                              "rr:object": "http://users.ugent.be/~bjdmeest/function/grel.ttl#controls_if",
                                              "rr:predicate": "https://w3id.org/function/ontology#executes"
                                            },
                                            {
                                              "@type": "rr:PredicateObjectMap",
                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#bool_b",
                                              "rr:objectMap": {
                                                "@type": "rr:ObjectMap",
                                                "fnml:functionValue": {
                                                  "@type": "fnml:FunctionValue",
                                                  "rr:predicateObjectMap": [
                                                    {
                                                      "@type": "rr:PredicateObjectMap",
                                                      "rr:object": "http://example.com/idlab/function/boolean_or",
                                                      "rr:predicate": "https://w3id.org/function/ontology#executes"
                                                    },
                                                    {
                                                      "@type": "rr:PredicateObjectMap",
                                                      "rr:objectMap": {
                                                        "@type": "rr:ObjectMap",
                                                        "fnml:functionValue": {
                                                          "@type": "fnml:FunctionValue",
                                                          "rr:predicateObjectMap": [
                                                            {
                                                              "@type": "rr:PredicateObjectMap",
                                                              "rr:object": "http://example.com/idlab/function/equal",
                                                              "rr:predicate": "https://w3id.org/function/ontology#executes"
                                                            },
                                                            {
                                                              "@type": "rr:PredicateObjectMap",
                                                              "rr:objectMap": {
                                                                "@type": "rr:ObjectMap",
                                                                "rml:reference": "status"
                                                              },
                                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter"
                                                            },
                                                            {
                                                              "@type": "rr:PredicateObjectMap",
                                                              "rr:objectMap": {
                                                                "@type": "rr:ObjectMap",
                                                                "rr:constant": "Rescheduled"
                                                              },
                                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter2"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#param_rep_b"
                                                    },
                                                    {
                                                      "@type": "rr:PredicateObjectMap",
                                                      "rr:objectMap": {
                                                        "@type": "rr:ObjectMap",
                                                        "fnml:functionValue": {
                                                          "@type": "fnml:FunctionValue",
                                                          "rr:predicateObjectMap": [
                                                            {
                                                              "@type": "rr:PredicateObjectMap",
                                                              "rr:object": "http://example.com/idlab/function/equal",
                                                              "rr:predicate": "https://w3id.org/function/ontology#executes"
                                                            },
                                                            {
                                                              "@type": "rr:PredicateObjectMap",
                                                              "rr:objectMap": {
                                                                "@type": "rr:ObjectMap",
                                                                "rml:reference": "status"
                                                              },
                                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter"
                                                            },
                                                            {
                                                              "@type": "rr:PredicateObjectMap",
                                                              "rr:objectMap": {
                                                                "@type": "rr:ObjectMap",
                                                                "rr:constant": "RelocatedAndRescheduled"
                                                              },
                                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter2"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#param_rep_b"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "@type": "rr:PredicateObjectMap",
                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#any_true",
                                              "rr:objectMap": {
                                                "@type": "rr:ObjectMap",
                                                "rr:constant": "EventRescheduled"
                                              }
                                            },
                                            {
                                              "@type": "rr:PredicateObjectMap",
                                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#any_false",
                                              "rr:objectMap": {
                                                "@type": "rr:ObjectMap",
                                                "rr:constant": "EventScheduled"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "rr:predicate": "schema:eventStatus"
                    }
                  ],
                  "rr:subjectMap": {
                    "@type": "rr:SubjectMap",
                    "rr:template": "https://example.com/data/stubhub/events/{id}",
                    "rr:class": "schema:Event"
                  }
                }
              },
              "rr:predicate": "skl:records"
            },
            {
              "@type": "rr:PredicateObjectMap",
              "rr:objectMap": {
                "@type": "rr:ObjectMap",
                "rr:parentTriplesMap": {
                  "@type": "rr:TriplesMap",
                  "rml:logicalSource": {
                    "@type": "rml:LogicalSource",
                    "rml:iterator": "$.['_embedded'].items[*]['_embedded'].venue",
                    "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
                    "rml:source": "input.json"
                  },
                  "rr:predicateObjectMap": [
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "id"
                      },
                      "rr:predicate": "skl:sourceId"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rr:termType": "rr:IRI",
                        "rr:constant": "https://example.com/integrations/Stubhub"
                      },
                      "rr:predicate": "skl:integration"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "postal_code"
                      },
                      "rr:predicate": "schema:postalCode"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "['_embedded'].country.code"
                      },
                      "rr:predicate": "schema:addressCountry"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "state_province"
                      },
                      "rr:predicate": "schema:addressRegion"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "city"
                      },
                      "rr:predicate": "schema:addressLocality"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "id"
                      },
                      "rr:predicate": "schema:identifier"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:predicate": "schema:streetAddress",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "name"
                      }
                    }
                  ],
                  "rr:subjectMap": {
                    "@type": "rr:SubjectMap",
                    "rr:template": "https://example.com/data/stubhub/venues/{id}",
                    "rr:class": "schema:PostalAddress"
                  }
                }
              },
              "rr:predicate": "skl:linkedRecords"
            },
            {
              "@type": "rr:PredicateObjectMap",
              "rr:objectMap": {
                "@type": "rr:ObjectMap",
                "rml:reference": "page",
                "rr:datatype": "http://www.w3.org/2001/XMLSchema#integer"
              },
              "rr:predicate": "skl:page"
            },
            {
              "@type": "rr:PredicateObjectMap",
              "rr:objectMap": {
                "@type": "rr:ObjectMap",
                "fnml:functionValue": {
                  "@type": "fnml:FunctionValue",
                  "rr:predicateObjectMap": [
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:object": "http://example.com/idlab/function/notEqual",
                      "rr:predicate": "https://w3id.org/function/ontology#executes"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "fnml:functionValue": {
                          "@type": "fnml:FunctionValue",
                          "rr:predicateObjectMap": [
                            {
                              "@type": "rr:PredicateObjectMap",
                              "rr:object": "http://example.com/idlab/function/math_max",
                              "rr:predicate": "https://w3id.org/function/ontology#executes"
                            },
                            {
                              "@type": "rr:PredicateObjectMap",
                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#p_dec_n",
                              "rr:objectMap": {
                                "@type": "rr:ObjectMap",
                                "rr:reference": "total_items",
                                "rr:datatype": "http://www.w3.org/2001/XMLSchema#integer"
                              }
                            },
                            {
                              "@type": "rr:PredicateObjectMap",
                              "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#param_n2",
                              "rr:objectMap": {
                                "@type": "rr:ObjectMap",
                                "fnml:functionValue": {
                                  "@type": "fnml:FunctionValue",
                                  "rr:predicateObjectMap": [
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:object": "http://users.ugent.be/~bjdmeest/function/grel.ttl#array_product",
                                      "rr:predicate": "https://w3id.org/function/ontology#executes"
                                    },
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#p_array_a",
                                      "rr:objectMap": {
                                        "@type": "rr:ObjectMap",
                                        "rml:reference": "page",
                                        "rr:datatype": "http://www.w3.org/2001/XMLSchema#integer"
                                      }
                                    },
                                    {
                                      "@type": "rr:PredicateObjectMap",
                                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#p_array_a",
                                      "rr:objectMap": {
                                        "@type": "rr:ObjectMap",
                                        "rr:reference": "page_size",
                                        "rr:datatype": "http://www.w3.org/2001/XMLSchema#integer"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rml:reference": "total_items",
                        "rr:datatype": "http://www.w3.org/2001/XMLSchema#integer"
                      }
                    }
                  ]
                }
              },
              "rr:predicate": "skl:hasNextPage"
            }
          ],
          "rr:subjectMap": {
            "@type": "rr:SubjectMap",
            "rr:termType": "rr:BlankNode",
            "rr:class": "https://standardknowledge.com/ontologies/core/PaginatedCollection"
          }
        }
      ],
      "returnValueFrame": {
        "@type": "https://standardknowledge.com/ontologies/core/PaginatedCollection",
         "https://standardknowledge.com/ontologies/core/records": {
          "https://schema.org/location": {
            "@embed": "@never"
          }
        }
      }
    },
    {
      "@id": "https://example.com/data/StubhubOpenApiDescription",
      "@type": "https://standardknowledge.com/ontologies/core/OpenApiDescription",
       "https://standardknowledge.com/ontologies/core/integration": "https://example.com/integrations/Stubhub",
       "https://standardknowledge.com/ontologies/core/openApiDescription": {
        "openapi": "3.0.0",
        "info": {
          "title": "StubHub Catalog API",
          "version": "1.0.0.33",
          "x-logo": {
            "url": "https://img.vggcdn.net/images/Assets/Icons/bfx/stubhub-logo-merch-purple-mweb.440b3765.svg",
            "backgroundColor": "#222222"
          }
        },
        "servers": [
          {
            "url": "https://api.stubhub.net",
            "description": "Production"
          }
        ],
        "paths": {
          "/catalog/events/search": {
            "get": {
              "tags": [
                "Events"
              ],
              "summary": "Search events",
              "description": "Search for events on the StubHub platform. Use this endpoint to search the entire StubHub event catalog with your application.",
              "operationId": "Events_SearchEvents",
              "parameters": [
                {
                  "name": "q",
                  "in": "query",
                  "description": "The query text to be used to match events.",
                  "schema": {
                    "type": "string",
                    "nullable": true
                  }
                },
                {
                  "name": "dateLocal",
                  "in": "query",
                  "description": "The specific date of the event, this is optional",
                  "schema": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                },
                {
                  "name": "page",
                  "in": "query",
                  "description": "Specifies which page of data to retrieve.",
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                {
                  "name": "page_size",
                  "in": "query",
                  "description": "Set custom page sizes on response.",
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                {
                  "name": "updated_since",
                  "in": "query",
                  "description": "Filters the response to only return items that have been updated since the given timestamp",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                {
                  "name": "sort",
                  "in": "query",
                  "description": "Determines the ordering of items. A comma-separated string containing `resource_version`.",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "min_resource_version",
                  "in": "query",
                  "schema": {
                    "type": "integer",
                    "format": "int64",
                    "nullable": true
                  }
                },
                {
                  "name": "country_code",
                  "in": "query",
                  "schema": {
                    "type": "string",
                    "description": "Filters results to only include events located in the specified country."
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "",
                  "content": {
                    "application/hal+json": {
                      "schema": {
                        "$ref": "#/components/schemas/Events"
                      }
                    }
                  }
                },
                "403": {
                  "$ref": "#/components/responses/forbidden",
                  "description": null
                },
                "401": {
                  "$ref": "#/components/responses/requires_authentication",
                  "description": null
                },
                "500": {
                  "$ref": "#/components/responses/internal_server_error",
                  "description": null
                }
              },
              "security": [
                {
                  "OAuth2": [
                    "read:events"
                  ]
                }
              ]
            }
          }
        },
        "components": {
          "schemas": {
            "Events": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "total_items": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
                },
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
                },
                "page_size": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EventsLinks"
                    }
                  ]
                },
                "_embedded": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EventsEmbeddedResources"
                    }
                  ]
                }
              }
            },
            "EventsLinks": {
              "title": "EventsLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "first": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "last": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "next": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "prev": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "Link": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "href": {
                  "type": "string",
                  "nullable": true
                },
                "title": {
                  "type": "string",
                  "nullable": true
                },
                "templated": {
                  "type": "boolean"
                }
              }
            },
            "EventsEmbeddedResources": {
              "title": "EventsEmbeddedResources",
              "type": "object",
              "properties": {
                "deleted_items": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                },
                "items": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            },
            "Event": {
              "type": "object",
              "description": "An event on the StubHub platform.",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The event identifier.",
                  "format": "int32"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the event."
                },
                "start_date": {
                  "type": "string",
                  "description": "The date when the event starts.",
                  "format": "date-time"
                },
                "end_date": {
                  "type": "string",
                  "description": "The date when the event ends.",
                  "format": "date-time",
                  "nullable": true
                },
                "on_sale_date": {
                  "type": "string",
                  "description": "The date when tickets for the event will go onsale.",
                  "format": "date-time",
                  "nullable": true
                },
                "date_confirmed": {
                  "type": "boolean",
                  "description": "True if the event start and end date have been confirmed; Otherwise, false."
                },
                "time_confirmed": {
                  "type": "boolean",
                  "description": "True if the event start and end time have been confirmed; Otherwise, false."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the event. Can be `Main` or `Parking`"
                },
                "min_ticket_price": {
                  "description": "The minimum ticket price of the event.",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Money"
                    }
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "The status of the event. Can be `Normal`, `Postponed`, `Cancelled`, `Rescheduled`, `Relocated`, `RelocatedAndRescheduled`, `Draft`, `Contingent` and `Deleted`"
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EventLinks"
                    }
                  ]
                },
                "_embedded": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EventEmbeddedResources"
                    }
                  ]
                }
              }
            },
            "Money": {
              "type": "object",
              "description": "Returned for monetary values, such as ticket prices, fees charged and tax amounts.",
              "additionalProperties": false,
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "The decimal amount of the money.",
                  "format": "decimal",
                  "nullable": true
                },
                "currency_code": {
                  "type": "string",
                  "description": "The ISO 4217 currency code that the monetary value is represented in."
                },
                "display": {
                  "type": "string",
                  "description": "A user-friendly string representing the monetary value."
                }
              }
            },
            "EventLinks": {
              "title": "EventLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "event:webpage": {
                  "description": "Url on the website for the event",
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "EventEmbeddedResources": {
              "title": "EventEmbeddedResources",
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "description": "The categories for this event.",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/EventCategory"
                  }
                },
                "external_mappings": {
                  "type": "array",
                  "description": "The external mappings for this event",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/EmbeddedExternalMapping"
                  }
                },
                "genre": {
                  "description": "The genre for this event.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmbeddedCategory"
                    }
                  ]
                },
                "venue": {
                  "description": "The venue where the event is taking place.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmbeddedVenue"
                    }
                  ]
                }
              }
            },
            "EventCategory": {
              "type": "object",
              "description": "A Category represents a grouping of events or other categories. Examples are “Concerts”, “Rock and Pop” and “Lady Gaga”.",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The category identifier.",
                  "format": "int32"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the category."
                },
                "role": {
                  "type": "string",
                  "description": "The role of the category for a particular event. Can be `MainArtist`, `SupportingArtist`, `HomeTeam`, `AwayTeam`, `Tournament`, `HeadlineAct`, `StandardAct`, `Festival`, `SportsLeague`, `ConcertTour`.",
                  "nullable": true
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EventCategoryLinks"
                    }
                  ]
                },
                "_embedded": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EventCategoryEmbeddedResources"
                    }
                  ]
                }
              }
            },
            "EventCategoryLinks": {
              "title": "EventCategoryLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "EventCategoryEmbeddedResources": {
              "title": "EventCategoryEmbeddedResources",
              "type": "object",
              "properties": {
                "external_mappings": {
                  "type": "array",
                  "description": "The external mappings for this category",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/EmbeddedExternalMapping"
                  }
                }
              }
            },
            "EmbeddedExternalMapping": {
              "type": "object",
              "description": "An external mapping between a resource on the StubHub platform and the same resource on another platforms. ",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource in the external platform"
                },
                "platform_name": {
                  "type": "string",
                  "description": "The name of the external platform. Can be `legacy_stubhub`."
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmbeddedExternalMappingLinks"
                    }
                  ]
                }
              }
            },
            "EmbeddedExternalMappingLinks": {
              "title": "EmbeddedExternalMappingLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "EmbeddedCategory": {
              "type": "object",
              "description": "A Category represents a grouping of events or other categories. Examples are “Concerts”, “Rock and Pop” and “Lady Gaga”.",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The category identifier.",
                  "format": "int32"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the category."
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmbeddedCategoryLinks"
                    }
                  ]
                },
                "_embedded": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmbeddedCategoryEmbeddedResources"
                    }
                  ]
                }
              }
            },
            "EmbeddedCategoryLinks": {
              "title": "EmbeddedCategoryLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "EmbeddedCategoryEmbeddedResources": {
              "title": "EmbeddedCategoryEmbeddedResources",
              "type": "object",
              "properties": {
                "external_mappings": {
                  "type": "array",
                  "description": "The external mappings for this category",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/EmbeddedExternalMapping"
                  }
                }
              }
            },
            "EmbeddedVenue": {
              "type": "object",
              "description": "A venue is a location where an event takes place.",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The venue identifier.",
                  "format": "int32"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the venue."
                },
                "city": {
                  "type": "string",
                  "description": "The name of the city where the venue is located."
                },
                "state_province": {
                  "type": "string",
                  "description": "The name of the State or Province where the venue is located."
                },
                "postal_code": {
                  "type": "string",
                  "description": "The postal code for the venue."
                },
                "latitude": {
                  "type": "number",
                  "description": "The latitude for the venue.",
                  "format": "double",
                  "nullable": true
                },
                "longitude": {
                  "type": "number",
                  "description": "The longitude for the venue.",
                  "format": "double",
                  "nullable": true
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmbeddedVenueLinks"
                    }
                  ]
                },
                "_embedded": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmbeddedVenueEmbeddedResources"
                    }
                  ]
                }
              }
            },
            "EmbeddedVenueLinks": {
              "title": "EmbeddedVenueLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "EmbeddedVenueEmbeddedResources": {
              "title": "EmbeddedVenueEmbeddedResources",
              "type": "object",
              "properties": {
                "country": {
                  "description": "The Country where the venue is located.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Country"
                    }
                  ]
                },
                "external_mappings": {
                  "type": "array",
                  "description": "The external mappings for this venue",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/EmbeddedExternalMapping"
                  }
                }
              }
            },
            "Country": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The two-letter ISO 3166 code for the country."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the country."
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CountryLinks"
                    }
                  ]
                }
              }
            },
            "CountryLinks": {
              "title": "CountryLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "Error": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "PutEventsRequest": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "event_ids": {
                  "type": "array",
                  "description": "The StubHub event identifiers of the events to be retrieved.",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            },
            "Venues": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "total_items": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
                },
                "page": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
                },
                "page_size": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/VenuesLinks"
                    }
                  ]
                },
                "_embedded": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/VenuesEmbeddedResources"
                    }
                  ]
                }
              }
            },
            "VenuesLinks": {
              "title": "VenuesLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "first": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "last": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "next": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                },
                "prev": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "VenuesEmbeddedResources": {
              "title": "VenuesEmbeddedResources",
              "type": "object",
              "properties": {
                "deleted_items": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/Venue"
                  }
                },
                "items": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/Venue"
                  }
                }
              }
            },
            "Venue": {
              "type": "object",
              "description": "An venue on the StubHub platform.",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The venue identifier.",
                  "format": "int32"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the venue."
                },
                "city": {
                  "type": "string",
                  "description": "The name of the city where the venue is located."
                },
                "state_province": {
                  "type": "string",
                  "description": "The name of the State or Province where the venue is located."
                },
                "postal_code": {
                  "type": "string",
                  "description": "The postal code for the venue."
                },
                "latitude": {
                  "type": "number",
                  "description": "The latitude for the venue.",
                  "format": "double",
                  "nullable": true
                },
                "longitude": {
                  "type": "number",
                  "description": "The longitude for the venue.",
                  "format": "double",
                  "nullable": true
                },
                "_links": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/VenueLinks"
                    }
                  ]
                },
                "_embedded": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/VenueEmbeddedResources"
                    }
                  ]
                }
              }
            },
            "VenueLinks": {
              "title": "VenueLinks",
              "type": "object",
              "properties": {
                "self": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Link"
                    }
                  ]
                }
              }
            },
            "VenueEmbeddedResources": {
              "title": "VenueEmbeddedResources",
              "type": "object",
              "properties": {
                "country": {
                  "description": "The Country where the venue is located.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Country"
                    }
                  ]
                },
                "external_mappings": {
                  "type": "array",
                  "description": "The external mappings for this venue",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/EmbeddedExternalMapping"
                  }
                }
              }
            }
          },
          "responses": {
            "requires_authentication": {
              "description": "Authentication credentials were missing or incorrect.",
              "content": {
                "application/hal+json": {
                  "schema": {
                    "nullable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      }
                    ]
                  }
                }
              }
            },
            "not_found": {
              "description": "The URI requested is invalid or the resource requested, such as an event, does not exist.",
              "content": {
                "application/hal+json": {
                  "schema": {
                    "nullable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      }
                    ]
                  }
                }
              }
            },
            "forbidden": {
              "description": "The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why.",
              "content": {
                "application/hal+json": {
                  "schema": {
                    "nullable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      }
                    ]
                  }
                }
              }
            },
            "internal_server_error": {
              "description": "Internal server error",
              "content": {
                "application/hal+json": {
                  "schema": {
                    "nullable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      }
                    ]
                  }
                }
              }
            },
            "validation_failed": {
              "description": "The request data is not valid. errors will contain an object with a localized message that describes the validation error for each property of the data.",
              "content": {
                "application/hal+json": {
                  "schema": {
                    "nullable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      }
                    ]
                  }
                }
              }
            }
          },
          "parameters": {
            "fields": {
              "in": "query",
              "description": "A comma-separated list of the name(s) of the field(s) to be returned."
            },
            "embed": {
              "in": "query",
              "description": "Optional embedded resources are only included in a resource when your application includes the embedded property name(s) as a comma-separated value in the embed parameter."
            }
          },
          "headers": {
            "Content-Language": {
              "schema": {
                "type": "string"
              },
              "example": "en-US"
            },
            "Content-Type": {
              "schema": {
                "type": "string"
              },
              "example": "application/hal+json"
            },
            "VGG-Topic": {
              "description": "Name of the topic that triggered this delivery",
              "schema": {
                "type": "string"
              },
              "example": "Ping"
            },
            "VGG-DeliveryId": {
              "description": "Unique identifier for this delivery",
              "schema": {
                "type": "string"
              },
              "example": "1993433"
            }
          },
          "securitySchemes": {
            "OAuth2": {
              "type": "oauth2",
              "bearerFormat": "JWT",
              "flows": {
                "implicit": {
                  "authorizationUrl": "https://account.stubhub.com/authorize",
                  "tokenUrl": "https://account.stubhub.com/oauth2/token",
                  "refreshUrl": "https://account.stubhub.com/oauth2/token"
                },
                "clientCredentials": {
                  "tokenUrl": "https://account.stubhub.com/oauth2/token"
                },
                "authorizationCode": {
                  "authorizationUrl": "https://account.stubhub.com/authorize",
                  "tokenUrl": "https://account.stubhub.com/oauth2/token",
                  "refreshUrl": "https://account.stubhub.com/oauth2/token"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:events",
              "read:venues"
            ]
          }
        ],
        "tags": [
          {
            "name": "BasicType_Money",
            "description": "Returned for monetary values, such as ticket prices, fees charged and tax amounts.\n<SchemaDefinition schemaRef=\"#/components/schemas/Money\" showReadOnly={true} showWriteOnly={true} />",
            "x-displayName": "Money"
          },
          {
            "name": "Events",
            "description": "View events on the StubHub platform"
          },
          {
            "name": "Resource_Event",
            "description": "An event on the StubHub platform.\n<SchemaDefinition schemaRef=\"#/components/schemas/Event\" showReadOnly={true} showWriteOnly={true} />",
            "x-displayName": "Event"
          },
          {
            "name": "Resource_Events",
            "description": "\n<SchemaDefinition schemaRef=\"#/components/schemas/Events\" showReadOnly={true} showWriteOnly={true} />",
            "x-displayName": "Events"
          },
          {
            "name": "Resource_Venue",
            "description": "An venue on the StubHub platform.\n<SchemaDefinition schemaRef=\"#/components/schemas/Venue\" showReadOnly={true} showWriteOnly={true} />",
            "x-displayName": "Venue"
          },
          {
            "name": "Resource_Venues",
            "description": "\n<SchemaDefinition schemaRef=\"#/components/schemas/Venues\" showReadOnly={true} showWriteOnly={true} />",
            "x-displayName": "Venues"
          },
          {
            "name": "Venues",
            "description": "View venues on the StubHub platform"
          }
        ],
        "x-tagGroups": [
          {
            "name": "Endpoints",
            "tags": [
              "Events",
              "Venues"
            ]
          },
          {
            "name": "Basic Types",
            "tags": [
              "BasicType_Money"
            ]
          },
          {
            "name": "Resources",
            "tags": [
              "Resource_Event",
              "Resource_Events",
              "Resource_Venue",
              "Resource_Venues"
            ]
          }
        ]
      }
    }
  ]
}