{
  "@context": {
    "shacl": "http://www.w3.org/ns/shacl#",
    "fnml": "http://semweb.mmlab.be/ns/fnml#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "label": "rdfs:label",
    "rdfs:subClassOf": {
      "@type": "@id"
    },
    "rdfs:range": {
      "@type": "@id"
    },
    "rdfs:domain": {
      "@type": "@id"
    },
    "boolean": "http://www.w3.org/2001/XMLSchema#boolean",
    "integer": "http://www.w3.org/2001/XMLSchema#integer",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "rr": "http://www.w3.org/ns/r2rml#",
    "rml": "http://semweb.mmlab.be/ns/rml#",
    "owl": "http://www.w3.org/2002/07/owl#",
    "skos": "http://www.w3.org/2004/02/skos/core#",
    "dcterms": "http://purl.org/dc/elements/1.1/",
    "description": "dcterms:description",
    "shacl:class": {
      "@type": "@id"
    },
    "shacl:datatype": {
      "@type": "@id"
    },
    "shacl:maxCount": {
      "@type": "xsd:integer"
    },
    "shacl:minCount": {
      "@type": "xsd:integer"
    },
    "shacl:targetClass": {
      "@type": "@id"
    },
    "shacl:path": {
      "@type": "@id"
    },
    "skl": "https://skl.so/",
    "skl:integratedProduct": {
      "@type": "@id"
    },
    "skl:account": {
      "@type": "@id"
    },
    "skl:openApiDescription": {
      "@type": "@json"
    },
    "skl:parametersContext": {
      "@type": "@json"
    },
    "skl:inputsContext": {
      "@type": "@json"
    },
    "skl:returnValueFrame": {
      "@type": "@json"
    },
    "skl:inputsMapping": {
      "@type": "@id"
    },
    "skl:inputsMappingFrame": {
      "@type": "@json"
    },
    "skl:outputsMapping": {
      "@type": "@id"
    },
    "skl:outputsMappingFrame": {
      "@type": "@json"
    },
    "skl:noun": {
      "@type": "@id"
    },
    "skl:object": {
      "@type": "@id"
    },
    "skl:parameterMapping": {
      "@type": "@id"
    },
    "skl:parameterMappingFrame": {
      "@type": "@json"
    },
    "skl:returnValueMapping": {
      "@type": "@id"
    },
    "skl:operationMapping": {
      "@type": "@id"
    },
    "skl:verbMapping": {
      "@type": "@id"
    },
    "skl:capabilityMapping": {
      "@type": "@id"
    },
    "integratedProduct": {
      "@id": "skl:integratedProduct",
      "@type": "@id"
    },
    "capability": {
      "@id": "skl:capability",
      "@type": "@id"
    },
    "rml:referenceFormulation": {
      "@type": "@id"
    },
    "rr:parentTriplesMap": {
      "@type": "@id"
    },
    "rr:predicate": {
      "@type": "@id"
    },
    "rr:object": {
      "@type": "@id"
    },
    "rr:termType": {
      "@type": "@id"
    },
    "rr:datatype": {
      "@type": "@id"
    },
    "rr:subject": {
      "@type": "@id"
    },
    "example": "https://example.com/",
    "https://skl.so/data": {
      "@type": "@json"
    },
    "skl:series": {
      "@container": "@list"
    }
  },
  "@graph": [
    {
      "@id": "https://example.com/transformText",
      "@type": "https://skl.so/Capability",
      "label": "transformText",
      "skl:inputsContext": {
        "text": {
          "@id": "https://example.com/text",
          "@type": "http://www.w3.org/2001/XMLSchema#string"
        }
      },
      "skl:inputs": {
        "@type": "shacl:NodeShape",
        "shacl:targetClass": "skl:Inputs",
        "shacl:property": [
          {
            "shacl:maxCount": 1,
            "shacl:minCount": 1,
            "shacl:path": "https://example.com/text",
            "shacl:name": "text",
            "shacl:datatype": "xsd:string"
          }
        ]
      }
    },
    {
      "@id": "https://example.com/transformTextMapping",
      "@type": "https://skl.so/CompositeMapping",
      "capability": "https://example.com/transformText",
      "skl:series": [
        {
          "skl:inputsMapping": {
            "@type": "rr:TriplesMap",
            "rml:logicalSource": {
              "@type": "rml:LogicalSource",
              "rml:iterator": "$",
              "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
              "rml:source": "input.json"
            },
            "rr:subject": "https://example.com/mappingSubject",
            "rr:predicateObjectMap": [
              {
                "@type": "rr:PredicateObjectMap",
                "rr:objectMap": {
                  "@type": "rr:ObjectMap",
                  "rr:datatype": "http://www.w3.org/2001/XMLSchema#string",
                  "rml:reference": "originalCapabilityParameters.entity[`@type]"
                },
                "rr:predicate": "example:noun"
              },
              {
                "@type": "rr:PredicateObjectMap",
                "rr:objectMap": {
                  "@type": "rr:ObjectMap",
                  "rml:reference": "originalCapabilityParameters.entity"
                },
                "rr:predicate": "example:entity"
              }
            ]
          },
          "skl:inputsMappingFrame": {
            "@context": {
              "noun": {
                "@id": "https://example.com/noun",
                "@type": "http://www.w3.org/2001/XMLSchema#string"
              },
              "entity": {
                "@id": "https://example.com/entity",
                "@type": "@id"
              }
            },
            "@id": "https://example.com/mappingSubject"
          },
          "skl:capabilityMapping": {
            "@type": "rr:TriplesMap",
            "rml:logicalSource": {
              "@type": "rml:LogicalSource",
              "rml:iterator": "$",
              "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
              "rml:source": "input.json"
            },
            "rr:predicateObjectMap": [
              {
                "@type": "rr:PredicateObjectMap",
                "rr:predicate": "skl:capabilityId",
                "fnml:functionValue": {
                  "@type": "fnml:FunctionValue",
                  "rr:predicateObjectMap": [
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:object": "http://users.ugent.be/~bjdmeest/function/grel.ttl#controls_if",
                      "rr:predicate": "https://w3id.org/function/ontology#executes"
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#bool_b",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rr:datatype": "http://www.w3.org/2001/XMLSchema#string",
                        "rr:constant": false
                      }
                    },
                    {
                      "@type": "rr:PredicateObjectMap",
                      "rr:predicate": "http://users.ugent.be/~bjdmeest/function/grel.ttl#any_true",
                      "rr:objectMap": {
                        "@type": "rr:ObjectMap",
                        "rr:constant": "https://example.com/skippedVerb"
                      }
                    }
                  ]
                }
              }
            ],
            "rr:subjectMap": {
              "@type": "rr:SubjectMap",
              "rr:termType": "rr:BlankNode"
            }
          }
        },
        {
          "skl:inputsMapping": {
            "@type": "rr:TriplesMap",
            "rml:logicalSource": {
              "@type": "rml:LogicalSource",
              "rml:iterator": "$",
              "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
              "rml:source": "input.json"
            },
            "rr:predicateObjectMap": [
              {
                "@type": "rr:PredicateObjectMap",
                "rr:predicate": "example:value",
                "rr:objectMap": {
                  "@type": "rr:ObjectMap",
                  "rr:datatype": "http://www.w3.org/2001/XMLSchema#string",
                  "rml:reference": "originalCapabilityParameters.text"
                }
              }
            ],
            "rr:subjectMap": {
              "@type": "rr:SubjectMap",
              "rr:termType": "rr:BlankNode"
            }
          },
          "skl:inputsMappingFrame": {
            "@context": {
              "value": {
                "@id": "https://example.com/value",
                "@type": "http://www.w3.org/2001/XMLSchema#string"
              }
            }
          },
          "skl:capabilityId": "https://example.com/getText"
        }
      ]
    },
    {
      "@id": "https://example.com/getText",
      "@type": "https://skl.so/Capability",
      "label": "getText",
      "skl:inputsContext": {
        "value": {
          "@id": "https://example.com/value",
          "@type": "http://www.w3.org/2001/XMLSchema#string"
        }
      },
      "skl:inputs": {
        "@type": "shacl:NodeShape",
        "shacl:targetClass": "skl:Inputs",
        "shacl:property": [
          {
            "shacl:datatype": "xsd:string",
            "shacl:maxCount": 1,
            "shacl:minCount": 1,
            "shacl:path": "https://example.com/value",
            "shacl:name": "value"
          }
        ]
      }
    },
    {
      "@id": "https://example.com/getTextMapping",
      "@type": "https://skl.so/Mapping",
      "capability": "https://example.com/getText",
      "skl:outputsMapping": {
        "@type": "rr:TriplesMap",
        "rml:logicalSource": {
          "@type": "rml:LogicalSource",
          "rml:iterator": "$",
          "rml:referenceFormulation": "http://semweb.mmlab.be/ns/ql#JSONPath",
          "rml:source": "input.json"
        },
        "rr:predicateObjectMap": [
          {
            "@type": "rr:PredicateObjectMap",
            "rr:predicate": "example:text",
            "rr:objectMap": {
              "@type": "rr:ObjectMap",
              "rr:datatype": "http://www.w3.org/2001/XMLSchema#string",
              "rml:reference": "value"
            }
          }
        ],
        "rr:subjectMap": {
          "@type": "rr:SubjectMap",
          "rr:termType": "rr:BlankNode"
        }
      },
      "skl:outputsMappingFrame": {
        "@context": {
          "text": {
            "@id": "https://example.com/text",
            "@type": "http://www.w3.org/2001/XMLSchema#string"
          }
        }
      }
    }
  ]
}